version = "$(pkg_version)"
description = "A ppx rewriter that generates hash functions from type expressions and definitions"
requires = "ppx_core ppx_driver ppx_hash.expander ppx_type_conv"
requires(-ppx_driver)        += "ppx_hash.runtime-lib"
requires(ppx_driver,toploop) += "ppx_hash.runtime-lib"
archive(ppx_driver, byte  ) = "ppx_hash.cma"
archive(ppx_driver, native) = "ppx_hash.cmxa"
plugin(ppx_driver, byte  ) = "ppx_hash.cma"
plugin(ppx_driver, native) = "ppx_hash.cmxs"
exists_if = "ppx_hash.cma"
ppxopt(-ppx_driver,-custom_ppx) = "ppx_deriving,package:ppx_hash"

package "expander" (
  version = "$(pkg_version)"
  description = "Expander for ppx_hash"
  requires = "compiler-libs.common ppx_core"
  archive(byte  ) = "ppx_hash_expander_lib.cma"
  archive(native) = "ppx_hash_expander_lib.cmxa"
  plugin(byte  ) = "ppx_hash_expander_lib.cma"
  plugin(native) = "ppx_hash_expander_lib.cmxs"
  exists_if = "ppx_hash_expander_lib.cma"
)

package "runtime-lib" (
  version = "$(pkg_version)"
  description = "Runtime library for ppx_hash"
  requires = "sexplib"
  archive(byte  ) = "ppx_hash_lib.cma"
  archive(native) = "ppx_hash_lib.cmxa"
  plugin(byte  ) = "ppx_hash_lib.cma"
  plugin(native) = "ppx_hash_lib.cmxs"
  exists_if = "ppx_hash_lib.cma"
)
